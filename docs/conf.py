# -*- coding: utf-8 -*-
#
# psyplot documentation build configuration file, created by
# sphinx-quickstart on Mon Jul 20 18:01:33 2015.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sphinx
import os
import os.path as osp
import subprocess as spr
import re
import six
from itertools import product
import psyplot_gui
import matplotlib as mpl
import warnings


warnings.filterwarnings(
    'ignore', message=r"\s*The Panel class is removed from pandas")


mpl.use('agg')

# -- General configuration ------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.autosummary',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode',
    'matplotlib.sphinxext.plot_directive',
    'IPython.sphinxext.ipython_console_highlighting',
    'IPython.sphinxext.ipython_directive',
    'sphinxarg.ext',
    'psyplot.sphinxext.extended_napoleon',
    'autodocsumm',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# create the api documentation
if not osp.exists(osp.join(osp.dirname(__file__), 'api')):
    spr.check_call(['bash', 'apigen.bash'])

napoleon_use_admonition_for_examples = True

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

autodoc_default_options = {
    'show_inheritance': True,
    'autosummary': True,
}

autoclass_content = 'both'

not_document_data = ['psyplot_gui.config.rcsetup.defaultParams',
                     'psyplot_gui.config.rcsetup.rcParams']

ipython_savefig_dir = os.path.join(os.path.dirname(__file__), '_static')

# General information about the project.
project = 'psyplot-gui'
copyright = ", ".join(
    psyplot_gui.__copyright__.strip().replace("Copyright (C) ", "").splitlines()
)
author = psyplot_gui.__author__

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = re.match(r'\d+\.\d+\.\d+', psyplot_gui.__version__).group()
# The full version, including alpha/beta/rc tags.
release = psyplot_gui.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.

html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Output file base name for HTML help builder.
htmlhelp_basename = 'psyplotguidoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # Additional stuff for the LaTeX preamble.
    'preamble': '\setcounter{tocdepth}{10}'
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  (master_doc, 'psyplot-gui.tex', u'psyplot GUI Documentation',
   author, 'manual'),
]

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'psyplot-gui', u'psyplot GUI Documentation',
     [author], 1)
]

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  (master_doc, 'psyplot-gui', u'psyplot GUI Documentation',
   author, 'psyplot-gui', 'Graphical user interface for the psyplot package',
   'Visualization'),
]

# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    'pandas': ('https://pandas.pydata.org/pandas-docs/stable/', None),
    'numpy': ('https://docs.scipy.org/doc/numpy/', None),
    'matplotlib': ('https://matplotlib.org/stable/', None),
    'sphinx': ('https://www.sphinx-doc.org/en/stable/', None),
    'xarray': ('https://xarray.pydata.org/en/stable/', None),
    'cartopy': ('https://scitools.org.uk/cartopy/docs/latest/', None),
    'mpl_toolkits': ('https://matplotlib.org/basemap/', None),
    'psyplot': ('https://psyplot.github.io/psyplot/', None),
    'python': ('https://docs.python.org/3/', None),
}

replacements = {
    '`psyplot.rcParams`': '`~psyplot.config.rcsetup.rcParams`',
    '`psyplot.InteractiveList`': '`~psyplot.data.InteractiveList`',
    '`psyplot.InteractiveArray`': '`~psyplot.data.InteractiveArray`',
    '`psyplot.open_dataset`': '`~psyplot.data.open_dataset`',
    '`psyplot.open_mfdataset`': '`~psyplot.data.open_mfdataset`',
    }


def link_aliases(app, what, name, obj, options, lines):
    for (key, val), (i, line) in product(six.iteritems(replacements),
                                         enumerate(lines)):
        lines[i] = line.replace(key, val)


def setup(app):
    app.connect('autodoc-process-docstring', link_aliases)
    return {'version': sphinx.__display_version__, 'parallel_read_safe': True}
